version: 0.2

env:
  variables:
    SPRING_PROFILE: "default"

phases:
  install:
    runtime-versions:
      java: corretto17
    run-as: root
  pre_build:
    commands:
      - echo "Building the Spring Boot application..."
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=809995143298.dkr.ecr.ap-northeast-2.amazonaws.com/web-novel
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Building the Docker image...
      - ls -al
      - chmod +x ./gradlew
      - ./gradlew build
      - echo Building the Docker image...
      - docker build -f Dockerfile -t $REPOSITORY_URI:latest --build-arg JAR_FILE=build/libs/web-novel-0.0.1-SNAPSHOT.jar .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"web-novel","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
cache:
  paths:
    - '/root/.gradle/**/*'

artifacts:
  files: imagedefinitions.json
